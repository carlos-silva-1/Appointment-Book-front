{"ast":null,"code":"import{useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import AppointmentForm from'../components/AppointmentForm';import AppointmentItem from'../components/AppointmentItem';import Spinner from'../components/Spinner';import{getAppointments,reset}from'../features/appointments/appointmentSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Dashboard(){var navigate=useNavigate();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),user=_useSelector.user;var _useSelector2=useSelector(function(state){return state.appointments;}),appointments=_useSelector2.appointments,isLoading=_useSelector2.isLoading,isError=_useSelector2.isError,message=_useSelector2.message;useEffect(function(){if(isError){console.log(message);}if(!user){navigate('/login');}dispatch(getAppointments());return function(){dispatch(reset());};},[user,navigate,isError,message,dispatch]);if(isLoading){return/*#__PURE__*/_jsx(Spinner,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"heading\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome \",user&&user.name]}),/*#__PURE__*/_jsx(\"p\",{children:\"Appointments Dashboard\"})]}),/*#__PURE__*/_jsx(AppointmentForm,{}),/*#__PURE__*/_jsx(\"section\",{className:\"content\",children:appointments.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"appointments\",children:appointments.map(function(appointment){return/*#__PURE__*/_jsx(AppointmentItem,{appointment:appointment},appointment._id);})}):/*#__PURE__*/_jsx(\"h3\",{children:\"You have not set any appointments\"})})]});}export default Dashboard;","map":{"version":3,"sources":["/home/carlos/Documentos/GitHub/Appointment-Book-front/src/pages/Dashboard.jsx"],"names":["useEffect","useNavigate","useSelector","useDispatch","AppointmentForm","AppointmentItem","Spinner","getAppointments","reset","Dashboard","navigate","dispatch","state","auth","user","appointments","isLoading","isError","message","console","log","name","length","map","appointment","_id"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,eAAT,CAA0BC,KAA1B,KAAuC,2CAAvC,C,6IAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAMU,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,iBAAiBD,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAA5B,CAAQC,IAAR,cAAQA,IAAR,CACA,kBAAsDZ,WAAW,CAC/D,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACG,YAAjB,EAD+D,CAAjE,CAAQA,YAAR,eAAQA,YAAR,CAAsBC,SAAtB,eAAsBA,SAAtB,CAAiCC,OAAjC,eAAiCA,OAAjC,CAA0CC,OAA1C,eAA0CA,OAA1C,CAIAlB,SAAS,CAAC,UAAM,CACd,GAAIiB,OAAJ,CAAa,CACXE,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACD,CAED,GAAI,CAACJ,IAAL,CAAW,CACTJ,QAAQ,CAAC,QAAD,CAAR,CACD,CAEDC,QAAQ,CAACJ,eAAe,EAAhB,CAAR,CAEA,MAAO,WAAM,CACXI,QAAQ,CAACH,KAAK,EAAN,CAAR,CACD,CAFD,CAGD,CAdQ,CAcN,CAACM,IAAD,CAAOJ,QAAP,CAAiBO,OAAjB,CAA0BC,OAA1B,CAAmCP,QAAnC,CAdM,CAAT,CAgBA,GAAIK,SAAJ,CAAe,CACb,mBAAO,KAAC,OAAD,IAAP,CACD,CAED,mBACE,wCACE,iBAAS,SAAS,CAAC,SAAnB,wBACE,iCAAaF,IAAI,EAAIA,IAAI,CAACO,IAA1B,GADF,cAEE,6CAFF,GADF,cAME,KAAC,eAAD,IANF,cAQE,gBAAS,SAAS,CAAC,SAAnB,UACGN,YAAY,CAACO,MAAb,CAAsB,CAAtB,cACC,YAAK,SAAS,CAAC,cAAf,UACGP,YAAY,CAACQ,GAAb,CAAiB,SAACC,WAAD,qBAChB,KAAC,eAAD,EAAuC,WAAW,CAAEA,WAApD,EAAsBA,WAAW,CAACC,GAAlC,CADgB,EAAjB,CADH,EADD,cAOC,yDARJ,EARF,GADF,CAsBD,CAED,cAAehB,CAAAA,SAAf","sourcesContent":["import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport AppointmentForm from '../components/AppointmentForm'\nimport AppointmentItem from '../components/AppointmentItem'\nimport Spinner from '../components/Spinner'\nimport { getAppointments, reset } from '../features/appointments/appointmentSlice'\n\nfunction Dashboard() {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const { user } = useSelector((state) => state.auth)\n  const { appointments, isLoading, isError, message } = useSelector(\n    (state) => state.appointments\n  )\n\n  useEffect(() => {\n    if (isError) {\n      console.log(message)\n    }\n\n    if (!user) {\n      navigate('/login')\n    }\n\n    dispatch(getAppointments())\n\n    return () => {\n      dispatch(reset())\n    }\n  }, [user, navigate, isError, message, dispatch])\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  return (\n    <>\n      <section className='heading'>\n        <h1>Welcome {user && user.name}</h1>\n        <p>Appointments Dashboard</p>\n      </section>\n\n      <AppointmentForm />\n\n      <section className='content'>\n        {appointments.length > 0 ? (\n          <div className='appointments'>\n            {appointments.map((appointment) => (\n              <AppointmentItem key={appointment._id} appointment={appointment} />\n            ))}\n          </div>\n        ) : (\n          <h3>You have not set any appointments</h3>\n        )}\n      </section>\n    </>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}