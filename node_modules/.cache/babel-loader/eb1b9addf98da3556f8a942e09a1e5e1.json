{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documentos/GitHub/Appointment-Book/frontend/src/pages/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppointmentForm from '../components/AppointmentForm';\nimport AppointmentItem from '../components/AppointmentItem';\nimport Spinner from '../components/Spinner';\nimport { getAppointments, reset } from '../features/appointments/appointmentSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    appointments,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.appointments);\n  useEffect(() => {\n    if (isError) {\n      console.log(message);\n    }\n\n    if (!user) {\n      navigate('/login');\n    }\n\n    dispatch(getAppointments());\n    return () => {\n      dispatch(reset());\n    };\n  }, [user, navigate, isError, message, dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", user && user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Appointments Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content\",\n      children: appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointments\",\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentItem, {\n          appointment: appointment\n        }, appointment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You have not set any appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"tyih4lyqQNNR3hgG1fun4mpWo30=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/carlos/Documentos/GitHub/Appointment-Book/frontend/src/pages/Dashboard.jsx"],"names":["useEffect","useNavigate","useSelector","useDispatch","AppointmentForm","AppointmentItem","Spinner","getAppointments","reset","Dashboard","navigate","dispatch","user","state","auth","appointments","isLoading","isError","message","console","log","name","length","map","appointment","_id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,eAAT,EAA0BC,KAA1B,QAAuC,2CAAvC;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAWV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA;AAApC,MAAgDhB,WAAW,CAC9DW,KAAD,IAAWA,KAAK,CAACE,YAD8C,CAAjE;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,OAAJ,EAAa;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD;;AAED,QAAI,CAACN,IAAL,EAAW;AACTF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;;AAEDC,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AAEA,WAAO,MAAM;AACXI,MAAAA,QAAQ,CAACH,KAAK,EAAN,CAAR;AACD,KAFD;AAGD,GAdQ,EAcN,CAACI,IAAD,EAAOF,QAAP,EAAiBO,OAAjB,EAA0BC,OAA1B,EAAmCP,QAAnC,CAdM,CAAT;;AAgBA,MAAIK,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAA,+BAAaJ,IAAI,IAAIA,IAAI,CAACS,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,gBACGN,YAAY,CAACO,MAAb,GAAsB,CAAtB,gBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGP,YAAY,CAACQ,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;AAAuC,UAAA,WAAW,EAAEA;AAApD,WAAsBA,WAAW,CAACC,GAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAsBD;;GAnDQhB,S;UACUR,W,EACAE,W,EAEAD,W,EACqCA,W;;;KAL/CO,S;AAqDT,eAAeA,SAAf","sourcesContent":["import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport AppointmentForm from '../components/AppointmentForm'\nimport AppointmentItem from '../components/AppointmentItem'\nimport Spinner from '../components/Spinner'\nimport { getAppointments, reset } from '../features/appointments/appointmentSlice'\n\nfunction Dashboard() {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const { user } = useSelector((state) => state.auth)\n  const { appointments, isLoading, isError, message } = useSelector(\n    (state) => state.appointments\n  )\n\n  useEffect(() => {\n    if (isError) {\n      console.log(message)\n    }\n\n    if (!user) {\n      navigate('/login')\n    }\n\n    dispatch(getAppointments())\n\n    return () => {\n      dispatch(reset())\n    }\n  }, [user, navigate, isError, message, dispatch])\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  return (\n    <>\n      <section className='heading'>\n        <h1>Welcome {user && user.name}</h1>\n        <p>Appointments Dashboard</p>\n      </section>\n\n      <AppointmentForm />\n\n      <section className='content'>\n        {appointments.length > 0 ? (\n          <div className='appointments'>\n            {appointments.map((appointment) => (\n              <AppointmentItem key={appointment._id} appointment={appointment} />\n            ))}\n          </div>\n        ) : (\n          <h3>You have not set any appointments</h3>\n        )}\n      </section>\n    </>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}